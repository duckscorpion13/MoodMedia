//
//  DetailsInteractor.swift
//  itunesapi_cs
//
//  Created by Alejandro Melo Domínguez on 7/29/19.
//  Copyright (c) 2019 Alejandro Melo Domínguez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailsBusinessLogic {
    func fetchAlbumDetails(request: Media)
    func didSelectMedia(request: Media)
}

protocol DetailsDataStore {
    var media: Media? { get set }
    var album: Album? { get set }
}

protocol DetailsPresentationLogic: NSObject {
	func presentAlbumDetails(response: [Media])
	func presentAlbumDetailsErrorMessage()
	func presentMediaPlayer(response: Media)
}

class DetailsInteractor: DetailsBusinessLogic, DetailsDataStore {
    weak var presenter: DetailsPresentationLogic? = nil
    var worker = DetailsWorker()
    var media: Media?
    var album: Album?

    // MARK: Do something

    func fetchAlbumDetails(request: Media) {
        worker.fetchAlbumDetails(media: request, completion: { success, album in
            self.album = album

            if success {
                self.presenter?.presentAlbumDetails(response: album)
            } else {
                self.presenter?.presentAlbumDetailsErrorMessage()
            }
        })
    }

    func didSelectMedia(request: Media) {
        presenter?.presentMediaPlayer(response: request)
    }
}
