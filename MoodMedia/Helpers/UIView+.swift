////  UIView+.swift//  MoodMedia////  Created by DerekYang on 2019/8/1.//  Copyright Â© 2019 DKY. All rights reserved.import UIKitextension UIView {		func center(in view: UIView, width: CGFloat, height: CGFloat) {		self.translatesAutoresizingMaskIntoConstraints = false		NSLayoutConstraint.activate([			self.centerXAnchor.constraint(equalTo: view.centerXAnchor),			self.centerYAnchor.constraint(equalTo: view.centerYAnchor),			self.widthAnchor.constraint(equalToConstant: width),			self.heightAnchor.constraint(equalToConstant: height),		])	}		func center(in view: UIView, widthRatio: CGFloat, heightRatio: CGFloat) {		self.translatesAutoresizingMaskIntoConstraints = false		NSLayoutConstraint.activate([			self.centerXAnchor.constraint(equalTo: view.centerXAnchor),			self.centerYAnchor.constraint(equalTo: view.centerYAnchor),			self.widthAnchor.constraint(equalTo: view.widthAnchor, multiplier: widthRatio),			self.heightAnchor.constraint(equalTo: view.heightAnchor, multiplier: heightRatio)		])	}		func anchor(top: NSLayoutYAxisAnchor?, left: NSLayoutXAxisAnchor?, bottom: NSLayoutYAxisAnchor?, right: NSLayoutXAxisAnchor?, width: CGFloat? = nil, height: CGFloat? = nil,  paddingTop: CGFloat = 0, paddingLeft: CGFloat = 0, paddingBottom: CGFloat = 0, paddingRight: CGFloat = 0) {			translatesAutoresizingMaskIntoConstraints = false			if let _top = top {			self.topAnchor.constraint(equalTo: _top, constant: paddingTop).isActive = true		}			if let _left = left {			self.leftAnchor.constraint(equalTo: _left, constant: paddingLeft).isActive = true		}			if let _bottom = bottom {			self.bottomAnchor.constraint(equalTo: _bottom, constant: -paddingBottom).isActive = true		}			if let _right = right {			self.rightAnchor.constraint(equalTo: _right, constant: -paddingRight).isActive = true		}			if let _width = width {			self.widthAnchor.constraint(equalToConstant: _width).isActive = true		}			if let _height = height {			self.heightAnchor.constraint(equalToConstant: _height).isActive = true		}	}		func full(of view: UIView) {		self.anchor(top: view.topAnchor, left: view.leftAnchor, bottom: view.bottomAnchor, right: view.rightAnchor)	}			func anchor(top: NSLayoutYAxisAnchor?, left: NSLayoutXAxisAnchor?, bottom: NSLayoutYAxisAnchor?, right: NSLayoutXAxisAnchor?, width: NSLayoutDimension? = nil, height: NSLayoutDimension? = nil,  paddingTop: CGFloat = 0, paddingLeft: CGFloat = 0, paddingBottom: CGFloat = 0, paddingRight: CGFloat = 0, widthRatio: CGFloat = 1, heightRatio: CGFloat = 1) {			translatesAutoresizingMaskIntoConstraints = false			if let _top = top {			self.topAnchor.constraint(equalTo: _top, constant: paddingTop).isActive = true		}			if let _left = left {			self.leftAnchor.constraint(equalTo: _left, constant: paddingLeft).isActive = true		}			if let _bottom = bottom {			self.bottomAnchor.constraint(equalTo: _bottom, constant: -paddingBottom).isActive = true		}			if let _right = right {			self.rightAnchor.constraint(equalTo: _right, constant: -paddingRight).isActive = true		}			if let _width = width {			self.widthAnchor.constraint(equalTo: _width, multiplier: widthRatio).isActive = true		}			if let _height = height {			self.heightAnchor.constraint(equalTo: _height, multiplier: heightRatio).isActive = true		}	}}